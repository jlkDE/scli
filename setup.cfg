[metadata]
name = scli
version = 0.7.5
author = isamert
url = https://github/com/isamert/scli
description = a simple terminal user interface for signal messenger
long_description = file: README.md
license = GPL-3

[options]
python_requires >= 3.7
packages =
	scli
install_requires =
	typing_extensions
	urwid
	wcwidth

[options.entry_points]
console_scripts =
	scli = scli:main

[options.extras_require]
qr = PyQRCode
readline = urwid_readline

[pylint]

[pylint.messages_control]

disable=
		no-else-return,
	# Fix later
		keyword-arg-before-vararg,
		too-few-public-methods,
		subprocess-run-check,
		missing-docstring,
		line-too-long,
		too-many-lines,


[pylint.basic]

good-names-rgxs=
		[f-o],
		w,


[pylint.string]

#check-quote-consistency=yes
	# Would be nice to have consistent quote style, but don't enforce it yet.


[pylint.format]

# Regexp for a line that is allowed to be longer than the limit.
# # TODO: ? add `# pylint: ...`
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Maximum number of characters on a single line.
#max-line-length=100

# Maximum number of lines in a module.
#max-module-lines=1000


[pylint.design]

# Minimum number of public methods for a class (see R0903).
#min-public-methods=2


# [pylint] END #


[flake8]
#[pycodestyle]
	# flake8 uses pycodestyle as a plugin, so they share (most of) the error codes
	# Uncomemnt whichever one we're currently using.
ignore = 
		E121,E123,E126,E226,E24,E704,W503,W504,
			# pycodestyle's default ignores
		E265,
			# Allow for `#` w/o space afterwards. 
			# Used for commenting-out a line of code, like `#print(..)`
		E116,
		E117,
			# Allow commenting on the next line, indented:
			# ```
			#	print(...)
			# 	# This prints "...", comes really handy.
			# ```
		E306,
			# `def` inside a `def` does not have to be preceded by an empty line 
		E203,
			# Allow spaces before `:` in slices with complex expressions:
			# 	alist[lower : upper + 1]
			# E203 is not actually PEP8 compliant.
	# Fix later
		E126, E127, E128, E124,
			# Has some disagreements with vim's automatic indentation for python
		E501
			# line too long
